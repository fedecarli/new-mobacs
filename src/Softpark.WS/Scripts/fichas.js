// Generated by IcedCoffeeScript 108.0.11
(function() {
  var Assoc, Download, Routes, ZoneamentoViewModel, assocs, assocsStorage, codes, downs, downsStorage, loadings, reduce, updates;

  Routes = (function() {
    function Routes() {
      var that;
      this.history = [];
      this.history.push(window.location.href);
      this.current = 0;
      that = this;
      window.onpopstate = function(e) {
        return that.pop(e);
      };
    }

    Routes.prototype.navigate = function(url) {
      var current;
      if (!url || url === void 0 || url === null) {
        throw new Error("Invalid Url Navigation");
      }
      url = url.split('?')[0];
      current = this.history[this.current];
      if (current !== url) {
        window.history.pushState({
          previous: {
            index: this.current,
            url: current
          },
          url: url
        }, '', url);
        this.current = this.history.push(url) - 1;
      }
    };

    Routes.prototype.pop = function(e) {
      return window.location.reload();
    };

    return Routes;

  })();

  window.renderHtmlCell = function(d) {
    return d;
  };

  window.routes = new Routes;

  assocs = [];

  assocsStorage = [];

  downs = [];

  downsStorage = [];

  updates = [];

  codes = [];

  window.beginRequest = function(promise, options) {
    var d;
    criaLoading("page-wrapper");
    if (options.url.toLowerCase().indexOf('marcacao/associacao') >= 0 && options.type.toLowerCase() === "post") {
      d = {
        "X-Requested-With": "XMLHttpRequest",
        "associacoes": assocs
      };
      options.data = jQuery.param(d);
      promise.done(function(d) {
        assocs = [];
        return assocsStorage = [];
      }).error(function() {
        return console.error(arguments, 1);
      });
    }
    if (options.url.toLowerCase().indexOf('marcacao/download') >= 0 && options.type.toLowerCase() === "post") {
      d = {
        "X-Requested-With": "XMLHttpRequest",
        "downloads": downs
      };
      options.data = jQuery.param(d);
      promise.done(function(d) {
        downs = [];
        return downsStorage = [];
      }).error(function() {
        return console.error(arguments, 1);
      });
    }
    return promise.complete(function() {
      return destroiLoading("page-wrapper");
    });
  };

  window.drawCallback = function() {
    var draw, _i, _len;
    $('.btn-create').remove();
    for (_i = 0, _len = draws.length; _i < _len; _i++) {
      draw = draws[_i];
      $(draw.el).append(draw.content);
    }
    if (updates.length > 0) {
      return $('#updateZon').removeClass('disabled').removeAttr('disabled');
    } else {
      return $('#updateZon').addClass('disabled').attr('disabled', true);
    }
  };

  jQuery.ajaxPrefilter(function(options, originalOptions, xhr) {
    if (options.url === 'ajax/default.asp') {
      options.url = originalOptions.url = "" + appPath + "../" + options.url;
    }
    if (options.url === 'ajax/login/verificaSessao.asp' || options.url === '../_inc/ajax/login/verificaSessao.asp') {
      options.url = originalOptions.url = "" + appPath + "../" + options.url;
      return xhr.done(function(data) {
        if (!data.sessao) {
          modalAlerta("Sessão Expirada", "Sua sessão expirou!");
          return setTimeout(function() {
            return window.location.assign("" + appPath + "../login.asp");
          }, 5000);
        }
      });
    }
  });

  $(function() {
    var prop, selectedSetor;
    selectedSetor = null;
    prop = false;
    window.ddlChange = function() {
      var cnes, d, ma, nome, txt;
      if (this.value === '') {
        return;
      }
      txt = $(this).text();
      d = txt.split(' / ');
      ma = d[0].trim();
      cnes = d[1].split(' - ')[0].trim();
      nome = d[1].trim();
      $(this).text(ma).data({
        setor: {
          cnes: cnes,
          nome: nome
        }
      });
      prop = true;
      if (this.selected && !selectedSetor) {
        selectedSetor = cnes;
        $('[name=unidadeCred]').val(cnes);
      } else if (selectedSetor !== cnes) {
        $(this).attr('disabled', true);
      }
      $('[name=unidadeCred]').trigger('change');
      prop = false;
    };
    $('select#idMicroAreaUnidade option, select#ItemVinc option').each(ddlChange);
    $(document).on('change', '[name=unidadeCred]', function() {
      var set;
      set = $(this).val();
      if (set !== selectedSetor && !prop) {
        $('select#idMicroAreaUnidade, select#ItemVinc').val('');
      }
      selectedSetor = set;
      return $('select#idMicroAreaUnidade option, select#ItemVinc option').each(function() {
        var cnes, setor;
        setor = $(this).data('setor');
        if (!setor) {
          return;
        }
        cnes = setor.cnes;
        if (selectedSetor === cnes) {
          return $(this).removeAttr('disabled');
        } else {
          return $(this).attr('disabled', true);
        }
      });
    });
  });

  loadings = [];

  window.criaLoading = function(alvoID) {
    var boxCarregando, out;
    if (0 === $('#' + alvoID).length) {
      return;
    }
    out = 0 > loadings.indexOf(alvoID);
    if (out) {
      loadings.push(alvoID);
    }
    boxCarregando = '<div class="div-carregando" id="div-carregando-' + alvoID + '">';
    boxCarregando += '<div class="div-carregando-fundo"></div>';
    boxCarregando += '<div class="div-carregando-conteudo">';
    boxCarregando += '<img src="' + appPath + '../img/ajax-loader-2.gif" /><br>';
    boxCarregando += '<span><b>Carregando...</b></span>';
    boxCarregando += '</div>';
    boxCarregando += '</div>';
    if ($('#div-carregando-' + alvoID).length === 0) {
      $('body').append(boxCarregando);
    }
    $('#div-carregando-' + alvoID).css({
      display: 'block',
      width: $('#' + alvoID).css("width"),
      height: $('#' + alvoID).css("height"),
      top: $('#' + alvoID).offset().top,
      left: $('#' + alvoID).offset().left
    });
  };

  window.destroiLoading = function(alvoID) {
    var a, b;
    a = $.extend([], [], loadings);
    b = a.splice(a.indexOf(alvoID));
    b.shift();
    a = [].concat(a, b);
    loadings = a;
    return $('#div-carregando-' + alvoID).remove();
  };

  $(window).on('resize', function() {
    var alvoID, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = loadings.length; _i < _len; _i++) {
      alvoID = loadings[_i];
      _results.push($('#div-carregando-' + alvoID).css({
        width: 0,
        height: 0,
        top: $('#' + alvoID).offset().top,
        left: $('#' + alvoID).offset().left
      }).css({
        width: $('#' + alvoID).css("width"),
        height: $('#' + alvoID).css("height"),
        top: $('#' + alvoID).offset().top,
        left: $('#' + alvoID).offset().left
      }));
    }
    return _results;
  });

  ZoneamentoViewModel = (function() {
    function ZoneamentoViewModel(microArea, codigo) {
      this.MicroArea = microArea;
      this.Codigo = codigo;
    }

    return ZoneamentoViewModel;

  })();

  $(document).on('click', '#updateZon', function(e) {
    e.preventDefault();
    e.stopPropagation();
    criaLoading('page-wrapper');
    $('#updateZon').addClass('disabled').attr('disabled', true);
    return $.post(window.location.href + '/Edit', {
      zoneamentos: updates
    }).always(function() {
      return destroiLoading('page-wrapper');
    }).done(function(d) {
      if (d === true) {
        updates = [];
        codes = [];
        oTable.fnDraw();
      } else {
        console.error(arguments, 0);
      }
      if (updates.length > 0) {
        return $('#updateZon').removeClass('disabled').removeAttr('disabled');
      } else {
        return $('#updateZon').addClass('disabled').attr('disabled', true);
      }
    }).error(function() {
      return console.error(arguments, 1);
    });
  });

  $(document).on('change', '.microArea', function(e) {
    var codigo, ma;
    e.preventDefault();
    e.stopPropagation();
    codigo = +this.id;
    ma = $(this).val();
    if (!ma) {
      if (0 <= codes.indexOf(codigo)) {
        delete updates[codes.indexOf(codigo)];
        delete codes[codes.indexOf(codigo)];
        updates = updates.filter(function(x) {
          return !!x;
        });
        codes = codes.filter(function(x) {
          return !isNaN(x);
        });
      }
    } else {
      if (0 <= codes.indexOf(codigo)) {
        updates[codes.indexOf(codigo)].MicroArea = ma;
      } else {
        codes.push(codigo);
        updates.push(new ZoneamentoViewModel(ma, codigo));
      }
    }
    if (updates.length > 0) {
      return $('#updateZon').removeClass('disabled').removeAttr('disabled');
    } else {
      return $('#updateZon').addClass('disabled').attr('disabled', true);
    }
  });

  window.renderMaSelection = function(d, s, i) {
    var codigo, tpl;
    codigo = i.Codigo;
    tpl = $($('#tplMaSelection').html().replace('{codigo}', codigo));
    setTimeout(function() {
      var u;
      if (0 <= codes.indexOf(codigo)) {
        u = updates[codes.indexOf(codigo)];
        d = u.MicroArea;
      }
      if (d) {
        return $('#' + codigo).val(d);
      }
    }, 100);
    return tpl[0].outerHTML;
  };

  Assoc = (function() {
    function Assoc() {
      this.Codigo = 0;
      this.Relacionar = false;
    }

    return Assoc;

  })();

  Download = (function() {
    function Download() {
      this.Vinculo = 0;
      this.Baixar = false;
    }

    return Download;

  })();

  reduce = function(x, z) {
    var _ref;
    return ((_ref = typeof x.Relacionar === 'undefined') != null ? _ref : {
      x: x.Relacionar
    }) + z.Relacionar;
  };

  $(document).on('change', '.chk_associar', function(e) {
    var assoc, index;
    e.preventDefault();
    e.stopPropagation();
    if (assocs.length === 0 && assocsStorage.length > 0) {
      assocsStorage = [];
    }
    index = assocsStorage.indexOf($(this).data('codigo'));
    if (index < 0) {
      index = assocs.length;
      assoc = new Assoc;
      assoc.Codigo = $(this).data('codigo');
      assocs.push(assoc);
      assocsStorage.push($(this).data('codigo'));
    }
    assoc = assocs[index];
    assoc.Relacionar = this.checked;
    $('#btn_update_assoc').attr('disabled', true).addClass('disabled');
    if (assocs.length > 0) {
      return $('#btn_update_assoc').removeAttr('disabled').removeClass('disabled');
    }
  });

  window.renderVincSelection = function(d, s, i) {
    var assoc, index;
    index = assocsStorage.indexOf($(this).data('codigo'));
    if (index >= 0) {
      assoc = assocs[index];
      if (assoc.Relacionar === false) {
        d = d.replace('checked', '');
      } else if (d.indexOf('checked') < 0) {
        d = d.replace('input ', 'input checked ');
      }
    }
    $('#btn_update_assoc').attr('disabled', true).addClass('disabled');
    if (assocs.length > 0) {
      $('#btn_update_assoc').removeAttr('disabled').removeClass('disabled');
    }
    return d;
  };

  window.renderDownSelection = function(d, s, i) {
    var down, index;
    index = downsStorage.indexOf($(this).data('vinculo'));
    if (index >= 0) {
      down = downs[index];
      if (down.Baixar === false) {
        d = d.replace('checked', '');
      } else if (d.indexOf('checked') < 0) {
        d = d.replace('input ', 'input checked ');
      }
    }
    $('#btn_update_download').attr('disabled', true).addClass('disabled');
    if (downs.length > 0) {
      $('#btn_update_download').removeAttr('disabled').removeClass('disabled');
    }
    return d;
  };

  $(document).on('change', '.chk_download', function(e) {
    var down, index;
    e.preventDefault();
    e.stopPropagation();
    if (downs.length === 0 && downsStorage.length > 0) {
      downsStorage = [];
    }
    index = downsStorage.indexOf($(this).data('vinculo'));
    if (index < 0) {
      index = downs.length;
      down = new Download;
      down.Vinculo = $(this).data('vinculo');
      downs.push(down);
      downsStorage.push($(this).data('vinculo'));
    }
    down = downs[index];
    down.Baixar = this.checked;
    $('#btn_update_download').attr('disabled', true).addClass('disabled');
    if (downs.length > 0) {
      return $('#btn_update_download').removeAttr('disabled').removeClass('disabled');
    }
  });

}).call(this);
