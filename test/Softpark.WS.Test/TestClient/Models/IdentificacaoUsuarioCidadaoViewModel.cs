// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Softpark.WS.Test.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// identificação do usuário cidadão
    /// </summary>
    public partial class IdentificacaoUsuarioCidadaoViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IdentificacaoUsuarioCidadaoViewModel class.
        /// </summary>
        public IdentificacaoUsuarioCidadaoViewModel() { }

        /// <summary>
        /// Initializes a new instance of the
        /// IdentificacaoUsuarioCidadaoViewModel class.
        /// </summary>
        public IdentificacaoUsuarioCidadaoViewModel(Guid? id = default(Guid?), string nomeSocial = default(string), string codigoIbgeMunicipioNascimento = default(string), long? dataNascimentoCidadao = default(long?), bool? desconheceNomeMae = default(bool?), string emailCidadao = default(string), int? nacionalidadeCidadao = default(int?), string nomeCidadao = default(string), string nomeMaeCidadao = default(string), string cnsCidadao = default(string), string cnsResponsavelFamiliar = default(string), string telefoneCelular = default(string), string numeroNisPisPasep = default(string), int? paisNascimento = default(int?), int? racaCorCidadao = default(int?), int? sexoCidadao = default(int?), bool? statusEhResponsavel = default(bool?), int? etnia = default(int?), string nomePaiCidadao = default(string), bool? desconheceNomePai = default(bool?), long? dtNaturalizacao = default(long?), string portariaNaturalizacao = default(string), long? dtEntradaBrasil = default(long?), string microarea = default(string), bool? stForaArea = default(bool?))
        {
            Id = id;
            NomeSocial = nomeSocial;
            CodigoIbgeMunicipioNascimento = codigoIbgeMunicipioNascimento;
            DataNascimentoCidadao = dataNascimentoCidadao;
            DesconheceNomeMae = desconheceNomeMae;
            EmailCidadao = emailCidadao;
            NacionalidadeCidadao = nacionalidadeCidadao;
            NomeCidadao = nomeCidadao;
            NomeMaeCidadao = nomeMaeCidadao;
            CnsCidadao = cnsCidadao;
            CnsResponsavelFamiliar = cnsResponsavelFamiliar;
            TelefoneCelular = telefoneCelular;
            NumeroNisPisPasep = numeroNisPisPasep;
            PaisNascimento = paisNascimento;
            RacaCorCidadao = racaCorCidadao;
            SexoCidadao = sexoCidadao;
            StatusEhResponsavel = statusEhResponsavel;
            Etnia = etnia;
            NomePaiCidadao = nomePaiCidadao;
            DesconheceNomePai = desconheceNomePai;
            DtNaturalizacao = dtNaturalizacao;
            PortariaNaturalizacao = portariaNaturalizacao;
            DtEntradaBrasil = dtEntradaBrasil;
            Microarea = microarea;
            StForaArea = stForaArea;
        }

        /// <summary>
        /// não usado no cadastro
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public Guid? Id { get; set; }

        /// <summary>
        /// nome social
        /// </summary>
        [JsonProperty(PropertyName = "nomeSocial")]
        public string NomeSocial { get; set; }

        /// <summary>
        /// codigo do municipio de nascimento
        /// </summary>
        [JsonProperty(PropertyName = "codigoIbgeMunicipioNascimento")]
        public string CodigoIbgeMunicipioNascimento { get; set; }

        /// <summary>
        /// data de nascimento
        /// </summary>
        [JsonProperty(PropertyName = "dataNascimentoCidadao")]
        public long? DataNascimentoCidadao { get; set; }

        /// <summary>
        /// desconhece o nome da mãe
        /// </summary>
        [JsonProperty(PropertyName = "desconheceNomeMae")]
        public bool? DesconheceNomeMae { get; set; }

        /// <summary>
        /// email do cidadão
        /// </summary>
        [JsonProperty(PropertyName = "emailCidadao")]
        public string EmailCidadao { get; set; }

        /// <summary>
        /// nacionalidade do cidadão
        /// </summary>
        [JsonProperty(PropertyName = "nacionalidadeCidadao")]
        public int? NacionalidadeCidadao { get; set; }

        /// <summary>
        /// nome do cidadão
        /// </summary>
        [JsonProperty(PropertyName = "nomeCidadao")]
        public string NomeCidadao { get; set; }

        /// <summary>
        /// nome da mãe do cidadão
        /// </summary>
        [JsonProperty(PropertyName = "nomeMaeCidadao")]
        public string NomeMaeCidadao { get; set; }

        /// <summary>
        /// CNS do cidadão
        /// </summary>
        [JsonProperty(PropertyName = "cnsCidadao")]
        public string CnsCidadao { get; set; }

        /// <summary>
        /// CNS do responsável familiar
        /// </summary>
        [JsonProperty(PropertyName = "cnsResponsavelFamiliar")]
        public string CnsResponsavelFamiliar { get; set; }

        /// <summary>
        /// telefone celular
        /// </summary>
        [JsonProperty(PropertyName = "telefoneCelular")]
        public string TelefoneCelular { get; set; }

        /// <summary>
        /// NIS/PIS/PASEP
        /// </summary>
        [JsonProperty(PropertyName = "numeroNisPisPasep")]
        public string NumeroNisPisPasep { get; set; }

        /// <summary>
        /// País de nascimento
        /// </summary>
        [JsonProperty(PropertyName = "paisNascimento")]
        public int? PaisNascimento { get; set; }

        /// <summary>
        /// Raça/Cor
        /// </summary>
        [JsonProperty(PropertyName = "racaCorCidadao")]
        public int? RacaCorCidadao { get; set; }

        /// <summary>
        /// Sexo
        /// </summary>
        [JsonProperty(PropertyName = "sexoCidadao")]
        public int? SexoCidadao { get; set; }

        /// <summary>
        /// É responsável
        /// </summary>
        [JsonProperty(PropertyName = "statusEhResponsavel")]
        public bool? StatusEhResponsavel { get; set; }

        /// <summary>
        /// Etnia
        /// </summary>
        [JsonProperty(PropertyName = "etnia")]
        public int? Etnia { get; set; }

        /// <summary>
        /// Nome do Pai
        /// </summary>
        [JsonProperty(PropertyName = "nomePaiCidadao")]
        public string NomePaiCidadao { get; set; }

        /// <summary>
        /// Desconhece o nome do Pai
        /// </summary>
        [JsonProperty(PropertyName = "desconheceNomePai")]
        public bool? DesconheceNomePai { get; set; }

        /// <summary>
        /// Data da naturalização
        /// </summary>
        [JsonProperty(PropertyName = "dtNaturalizacao")]
        public long? DtNaturalizacao { get; set; }

        /// <summary>
        /// Portaria da Naturalização
        /// </summary>
        [JsonProperty(PropertyName = "portariaNaturalizacao")]
        public string PortariaNaturalizacao { get; set; }

        /// <summary>
        /// Data de entrada no Brasil
        /// </summary>
        [JsonProperty(PropertyName = "dtEntradaBrasil")]
        public long? DtEntradaBrasil { get; set; }

        /// <summary>
        /// Microárea
        /// </summary>
        [JsonProperty(PropertyName = "microarea")]
        public string Microarea { get; set; }

        /// <summary>
        /// Fora de área
        /// </summary>
        [JsonProperty(PropertyName = "stForaArea")]
        public bool? StForaArea { get; set; }

    }
}
