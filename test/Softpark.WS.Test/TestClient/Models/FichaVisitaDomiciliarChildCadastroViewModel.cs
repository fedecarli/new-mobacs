// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Softpark.WS.Test.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// FichaVisitaDomiciliarChild DTO
    /// </summary>
    public partial class FichaVisitaDomiciliarChildCadastroViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// FichaVisitaDomiciliarChildCadastroViewModel class.
        /// </summary>
        public FichaVisitaDomiciliarChildCadastroViewModel() { }

        /// <summary>
        /// Initializes a new instance of the
        /// FichaVisitaDomiciliarChildCadastroViewModel class.
        /// </summary>
        public FichaVisitaDomiciliarChildCadastroViewModel(Guid? token = default(Guid?), long? turno = default(long?), string numProntuario = default(string), string cnsCidadao = default(string), long? dtNascimento = default(long?), long? sexo = default(long?), IList<long?> motivosVisita = default(IList<long?>), long? desfecho = default(long?), string microarea = default(string), bool? stForaArea = default(bool?), long? tipoDeImovel = default(long?), double? pesoAcompanhamentoNutricional = default(double?), double? alturaAcompanhamentoNutricional = default(double?), bool? statusVisitaCompartilhadaOutroProfissional = default(bool?))
        {
            Token = token;
            Turno = turno;
            NumProntuario = numProntuario;
            CnsCidadao = cnsCidadao;
            DtNascimento = dtNascimento;
            Sexo = sexo;
            MotivosVisita = motivosVisita;
            Desfecho = desfecho;
            Microarea = microarea;
            StForaArea = stForaArea;
            TipoDeImovel = tipoDeImovel;
            PesoAcompanhamentoNutricional = pesoAcompanhamentoNutricional;
            AlturaAcompanhamentoNutricional = alturaAcompanhamentoNutricional;
            StatusVisitaCompartilhadaOutroProfissional = statusVisitaCompartilhadaOutroProfissional;
        }

        /// <summary>
        /// Token da transmissão
        /// </summary>
        [JsonProperty(PropertyName = "token")]
        public Guid? Token { get; set; }

        /// <summary>
        /// Turno da visita
        /// </summary>
        [JsonProperty(PropertyName = "turno")]
        public long? Turno { get; set; }

        /// <summary>
        /// Número do prontuário
        /// </summary>
        [JsonProperty(PropertyName = "numProntuario")]
        public string NumProntuario { get; set; }

        /// <summary>
        /// Cns do Cidadão
        /// </summary>
        [JsonProperty(PropertyName = "cnsCidadao")]
        public string CnsCidadao { get; set; }

        /// <summary>
        /// Data de Nascimento
        /// </summary>
        [JsonProperty(PropertyName = "dtNascimento")]
        public long? DtNascimento { get; set; }

        /// <summary>
        /// Sexo do cidadão
        /// </summary>
        [JsonProperty(PropertyName = "sexo")]
        public long? Sexo { get; set; }

        /// <summary>
        /// Motivos da visita
        /// </summary>
        [JsonProperty(PropertyName = "motivosVisita")]
        public IList<long?> MotivosVisita { get; set; }

        /// <summary>
        /// Desfecho da visita
        /// </summary>
        [JsonProperty(PropertyName = "desfecho")]
        public long? Desfecho { get; set; }

        /// <summary>
        /// Micro área do atendimento
        /// </summary>
        [JsonProperty(PropertyName = "microarea")]
        public string Microarea { get; set; }

        /// <summary>
        /// Fora de área
        /// </summary>
        [JsonProperty(PropertyName = "stForaArea")]
        public bool? StForaArea { get; set; }

        /// <summary>
        /// Tipo de imóvel da visita
        /// </summary>
        [JsonProperty(PropertyName = "tipoDeImovel")]
        public long? TipoDeImovel { get; set; }

        /// <summary>
        /// Peso do paciente
        /// </summary>
        [JsonProperty(PropertyName = "pesoAcompanhamentoNutricional")]
        public double? PesoAcompanhamentoNutricional { get; set; }

        /// <summary>
        /// Altura do paciente
        /// </summary>
        [JsonProperty(PropertyName = "alturaAcompanhamentoNutricional")]
        public double? AlturaAcompanhamentoNutricional { get; set; }

        /// <summary>
        /// Visita compartilhada
        /// </summary>
        [JsonProperty(PropertyName = "statusVisitaCompartilhadaOutroProfissional")]
        public bool? StatusVisitaCompartilhadaOutroProfissional { get; set; }

    }
}
